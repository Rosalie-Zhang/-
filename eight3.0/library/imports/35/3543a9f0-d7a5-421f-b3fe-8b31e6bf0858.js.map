{"version":3,"sources":["assets\\Script\\Arrow.js"],"names":["score","require","cc","Class","Component","properties","onLoad","direction","v2","rigidBody","getComponent","RigidBody","weldJoint","WeldJoint","start","update","dt","velocity","linearVelocity","speed","mag","angle","signAngle","node","Math","PI","dragConstant","normalize","pointingDirection","getWorldVector","flightDirection","flightSpeed","normalizeSelf","dot","dragForceMagnitude","abs","getMass","arrowTailPosition","getWorldPoint","applyForce","mul","updateArrowRotation","pos","parent","convertToNodeSpaceAR","sub","position","shoot","type","mulSelf","onBeginContact","contact","selfCollider","otherCollider","joint","enabled","disabled","onPostSolve","scoreAdd","impulse","getImpulse","normalImpulses","PhysicsManager","PTM_RATIO","name","tag","arrowBody","body","targetBody","worldManifold","getWorldManifold","points","point","getLocalPoint","x","worldCoordsAnchorPoint","connectedBody","anchor","connectedAnchor","referenceAngle"],"mappings":"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","sourceRoot":"/","sourcesContent":["var score = require('GameScore');\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.direction = cc.v2(0, 0);\r\n        this.rigidBody = this.getComponent(cc.RigidBody);\r\n        this.weldJoint = this.getComponent(cc.WeldJoint);\r\n    },\r\n\r\n    start () {\r\n    },\r\n\r\n    update (dt) {\r\n        let velocity = this.rigidBody.linearVelocity;\r\n        let speed = velocity.mag();\r\n        if (speed === 0) return;\r\n            let angle = velocity.signAngle(cc.v2(1,0));\r\n            this.node.angle = -(angle * 180 / Math.PI);\r\n        let dragConstant = 0.1;\r\n        let direction = velocity.normalize();\r\n\r\n        let pointingDirection = this.rigidBody.getWorldVector( cc.v2( 1, 0 ) );\r\n        let flightDirection = this.rigidBody.linearVelocity;\r\n        let flightSpeed = flightDirection.mag();\r\n        flightDirection.normalizeSelf();\r\n        \r\n        let dot = flightDirection.dot(pointingDirection);\r\n        let dragForceMagnitude = (1 - Math.abs(dot)) * flightSpeed * flightSpeed * dragConstant * this.rigidBody.getMass();\r\n        \r\n        let arrowTailPosition = this.rigidBody.getWorldPoint( cc.v2( -68, 0 ) );\r\n        this.rigidBody.applyForce( flightDirection.mul(-dragForceMagnitude), arrowTailPosition, false );\r\n    },\r\n\r\n    updateArrowRotation(pos) {\r\n        pos = this.node.parent.convertToNodeSpaceAR(pos);\r\n        pos = pos.sub(this.node.position);\r\n        this.direction = pos.normalize();\r\n        let angle = pos.signAngle(cc.v2(1,0));\r\n        this.node.angle = -(angle * 180 / Math.PI);\r\n    },\r\n\r\n    shoot () {\r\n        this.rigidBody.type = 2;\r\n        let velocity = this.direction.mulSelf(1800);\r\n        this.rigidBody.linearVelocity = velocity;\r\n    },\r\n\r\n    onBeginContact (contact, selfCollider, otherCollider) {\r\n        let joint = this.weldJoint;\r\n        if (joint.enabled) {\r\n            contact.disabled = true;\r\n        }\r\n    },\r\n\r\n    // 每次处理完碰撞体接触逻辑时被调用\r\n    onPostSolve (contact, selfCollider, otherCollider) {\r\n        score.scoreAdd(1);\r\n        let impulse = contact.getImpulse();// 获取冲量信息，注意这个信息只有在 onPostSolve 回调中才能获取到\r\n        if (Math.abs(impulse.normalImpulses[0]) < cc.PhysicsManager.PTM_RATIO) return;\r\n        let joint = this.weldJoint;\r\n\r\n        if (joint.enabled) {\r\n            joint.enabled = false;\r\n            return;\r\n        }\r\n\r\n        if (otherCollider.node.name == \"arrow\" || otherCollider.tag == 1) {\r\n            return;\r\n        }\r\n\r\n        let arrowBody = selfCollider.body;\r\n        let targetBody = otherCollider.body;\r\n        let worldManifold = contact.getWorldManifold();// 将 arrowBody 本地坐标系下的点转换为世界坐标系下的点\r\n        let points = worldManifold.points;\r\n        let point = arrowBody.getLocalPoint(points[0]);\r\n        if (point.x < 54) {\r\n            return;\r\n        }\r\n\r\n        let worldCoordsAnchorPoint = arrowBody.getWorldPoint(cc.v2(0, 0));\r\n    \r\n        joint.connectedBody = targetBody;\r\n        joint.anchor = arrowBody.getLocalPoint(worldCoordsAnchorPoint);\r\n        joint.connectedAnchor = targetBody.getLocalPoint(worldCoordsAnchorPoint);\r\n        joint.referenceAngle = arrowBody.node.angle - targetBody.node.angle;\r\n\r\n        joint.enabled = true;\r\n\r\n    }\r\n});\r\n"]}